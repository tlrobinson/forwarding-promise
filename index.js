// Generated by CoffeeScript 1.6.3
(function() {
  var ForwardingHandler, Proxy, Q, QProxy;

  Q = require("q");

  Proxy = require("node-proxy");

  ForwardingHandler = require("./forwarding-handler");

  QProxy = function(target) {
    var forwarder;
    forwarder = new ForwardingHandler(target);
    forwarder.get = function(rcvr, name) {
      var _this = this;
      if (typeof target[name] === "function" || target[name] === void 0) {
        return function() {
          var args, result;
          args = arguments;
          if (target[name]) {
            result = target[name].apply(target, args);
          } else {
            result = target.post(name, args);
          }
          if ((result != null) && typeof result === "object") {
            return QProxy(result);
          } else {
            return result;
          }
        };
      } else {
        return this.target[name];
      }
    };
    return Proxy.create(forwarder, Object.getPrototypeOf(target));
  };

  module.exports = QProxy;

}).call(this);
